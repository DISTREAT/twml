\!src-subtitle {id}.1 About TWML

TWML is an alternative solution to existing Markup Languages such as LaTeX, Markdown, Asciidoctor, or Troff. In essence, TWML is supposed to be the alternative that seeks to discover the sweet spot between being too simple and being too complex.

The driving force behind TWML is TailwindCSS, a "stylizing" framework for developing websites. Although TailwindCSS is mainly for website development, it is perfectly capable of creating stunning documents.

To simplify HTML, the Markup Language used by browsers, TWML, specifies a syntax that abstracts HTML for better readability and an extended feature set, such as importing templates.

Using TWML requires learning TailwindCSS and the basic structure of HTML.


\!src-subtitle {id}.2 Features and Shortcomings

TWML might be of interest to someone that:

\ul.list-disc
    \li Already knows TailwindCSS
    \li Wishes to extend their documents through the use of Javascript or CSS software
    \li Searches for a more flexible alternative to existing Markup Languages

TWML might not be of interest to someone that:

\ul.list-disc
    \li Is happy with existing Markup Languages
    \li Is not interested in learning TailwindCSS or HTML
    \li Does not wish to adapt to breaking changes (TWML is in early development)

\!src-subtitle {id}.3 Hello World!

Setting up TWML requires installing Rust. After setting up
\a{href="https://www.rust-lang.org/tools/install"} Rust
, installing a development version of TWML should be as simple as running the following command in your shell of preference:

\!src-codebox
    cargo install --git https://github.com/DISTREAT/twml

The following software should now be available:

\div.pl-2.pt-2
    \span.font-bold twml-html: 
    Convert a TWML document to html

    \span.font-bold twml-pdf: 
    Convert a TWML document to pdf

    \span.font-bold twml-live: 
    Start a webserver that serves a TWML document (used for live preview)

Let's create a simple document and convert it to PDF:

\!src-codebox
    \span \p.font-bold Hello World!

Command:
\!src-codebox twml-pdf document.twml document.pdf

\p.font-bold Hello World!

This example should be rather simple to interpret. We create a paragraph with a bold font, containing the text "Hello World!".

In HTML terms this would translate to: 
\span.italic.bg-slate-100 &lt;p class="font-bold"&gt;Hello World!&lt;/p&gt;


\!src-subtitle {id}.3 Resources

The perfect resource for understanding how to style your documents is the official 
\a{href="https://tailwindcss.com/docs"} TailwindCSS documentation
.

For a good HTML element reference see
\a{href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element"} Mozilla's documentation
.


\!src-subtitle {id}.4 Breakline-Sensitivity

TWML is breakline-sensitive, this means that empty lines matter:

\!src-codebox
    \pre This text is 
    \pre \span.font-bold bold
    \pre !

This text is 
\span.font-bold bold
!


\!src-codebox
    \pre This text is 
    \br
    \pre \span.font-bold bold
    \pre !

This text is 

\span.font-bold bold
!


\!src-codebox
    \pre This text is 
    \pre \p unformated
    \pre !

This text is 
\p unformated
!


\p.italic Note: Sometimes and due to the nature of HTML the way newlines are treated can become a bit confusing, but it'll become intuitive with time.

